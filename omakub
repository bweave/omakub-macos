#!/usr/bin/env bash

### Omakub-macOS ######################################
# A script to set a system-wide look and feel for macOS
#######################################################

OMAKUB_PATH="$HOME/src/omakub-macos"

# We're gonna need brew
if ! command -v brew &>/dev/null; then
	echo "Installing homebrew..."
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Some apps we need
# gum for choosing themes
# nvr for setting neovim colorscheme across all instances
for app in gum nvr; do
	if ! command -v $app &>/dev/null; then
		echo "Installing $app..."
		brew install $app
	fi
done

if [ $# -eq 0 ]; then
	# TODO: add kanagawa dragon
	# Pick a preconfigured theme
	THEME_NAMES=("Onedark" "Everforest" "Gruvbox" "Kanagawa" "Rose Pine Dawn")
	THEME=$(gum choose "${THEME_NAMES[@]}" --header "Choose your theme" --height 9 | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g')
	[ -z "$THEME" ] && echo "No theme selected" && exit 0
else
	THEME=$1
fi

# Translate to specific vars
if [ "$THEME" == "gruvbox" ]; then
	DARK_MODE="true"
	ITERM_THEME="gruvbox-dark"
	WALLPAPER="$OMAKUB_PATH/backgrounds/fog_forest_2.jpg"
	NVIM_BACKGROUND="dark"
	VSC_THEME="Gruvbox Dark Medium"
	VSC_EXTENSION="jdinhlife.gruvbox"
elif [ "$THEME" == "onedark" ]; then
	DARK_MODE="true"
	ITERM_THEME="onedark"
	WALLPAPER="$OMAKUB_PATH/backgrounds/80s-retro-tropical-sunset-by-freepik.jpg"
	NVIM_BACKGROUND="dark"
	VSC_THEME="One Dark Pro"
	VSC_EXTENSION="zhuangtongfa.one-dark-pro"
elif [ "$THEME" == "everforest" ]; then
	DARK_MODE="true"
	ITERM_THEME="everforest_dark_low"
	WALLPAPER="$OMAKUB_PATH/backgrounds/ferns-green.jpg"
	NVIM_BACKGROUND="dark"
	VSC_THEME="Everforest Dark"
	VSC_EXTENSION="sainnhe.everforest"
elif [ "$THEME" == "kanagawa" ]; then
	DARK_MODE="true"
	ITERM_THEME="kanagawa_dragon"
	WALLPAPER="$OMAKUB_PATH/backgrounds/kanagawa.jpg"
	NVIM_BACKGROUND="dark"
	VSC_THEME="Kanagawa"
	VSC_EXTENSION="qufiwefefwoyn.kanagawa"
elif [ "$THEME" == "rose-pine-dawn" ]; then
	DARK_MODE="false"
	ITERM_THEME="rose-pine-dawn"
	WALLPAPER="$OMAKUB_PATH/backgrounds/simple-pastel-by-triarts-from-freepik.jpg"
	NVIM_BACKGROUND="light"
	VSC_THEME="RosÃ© Pine Dawn"
	VSC_EXTENSION="mvllow.rose-pine"
fi

# set iterm profile
if [[ $TERM_PROGRAM == "iTerm.app" ]] || [[ -n $ITERM_SESSION_ID ]]; then
	osascript -e "
  tell application \"iTerm\"
    tell every window
      tell every tab
        tell every session
          set color preset to \"$ITERM_THEME\"
        end tell
      end tell
    end tell
  end tell"
fi

# set dark mode
if [ "$DARK_MODE" = "true" ]; then
	osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to true'
else
	osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to false'
fi

# set wallpaper
osascript -e "tell application \"Finder\"
  set desktop picture to POSIX file \"$WALLPAPER\"
end tell"

# set alacritty theme if it's installed
if command -v alacritty &>/dev/null; then
	cp "$OMAKUB_PATH/themes/alacritty/$THEME.toml" ~/.config/alacritty/theme.toml
	touch ~/.config/alacritty/alacritty.toml
fi

# set neovim theme
cp "$OMAKUB_PATH/themes/neovim/$THEME.lua" ~/.config/nvim/lua/plugins/theme.lua
for servername in $(nvr --serverlist); do
	nvr --servername "$servername" --remote-send ":colorscheme $THEME | set background=$NVIM_BACKGROUND<CR>"
done

# set vscode theme
if command -v code &>/dev/null; then
	code --install-extension "$VSC_EXTENSION" >/dev/null
	jq --arg vsc_theme "$VSC_THEME" '.["workbench.colorTheme"] = $vsc_theme' ~/Library/Application\ Support/Code/User/settings.json >tmp.json && mv tmp.json ~/Library/Application\ Support/Code/User/settings.json
	if [ "$THEME" == "rose-pine-dawn" ]; then
		jq --arg vsc_theme "$VSC_THEME" '.["workbench.preferredLightColorTheme"] = $vsc_theme' ~/Library/Application\ Support/Code/User/settings.json >tmp.json && mv tmp.json ~/Library/Application\ Support/Code/User/settings.json
	else
		jq --arg vsc_theme "$VSC_THEME" '.["workbench.preferredDarkColorTheme"] = $vsc_theme' ~/Library/Application\ Support/Code/User/settings.json >tmp.json && mv tmp.json ~/Library/Application\ Support/Code/User/settings.json
	fi
fi

# set chrome theme
if mdfind "kMDItemCFBundleIdentifier == 'com.google.Chrome'" >/dev/null; then
	if gum confirm "Do you want to update Chrome theme? If yes, Chrome will be restarted!"; then
		pkill -a -i "Google Chrome"

		while pgrep -i "Google Chrome" >/dev/null; do
			sleep 0.1
		done

		source "$OMAKUB_PATH/themes/chrome/$THEME.sh"
		open -a "Google Chrome"
	fi
fi

exit 0
